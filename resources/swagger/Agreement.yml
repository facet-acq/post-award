---
swagger: '2.0'
info:
  description: This is a sample document for the agreement resource
  version: '0.1.0'
  title: 'Agreement'
  termsOfService: 'http://example.com'
  contact:
    email: djfurman@gmail.com
  license:
    name: 'BSD 3-Clause License'
    url: 'https://raw.githubusercontent.com/facet-acq/post-award/develop/LICENSE.md'
host: 'facet.danielfurman.net'
basePath: '/api/v1'
tags:
- name: 'agreement'
  description: 'Create and modify agreements'
  externalDocs:
    description: 'Learn more!'
    url: 'https://github.com/facet-acq/post-award/wiki/Getting-Started'
- name: 'invoice'
  description: 'add this'
  externalDocs:
    description: 'Add here'
    url: 'https://github.com/facet-acq/post-award/wiki/Getting-Started'
schemes:
- 'http'
paths:
  /agreement:
    get:
      summary: 'Collection of agreements'
      description: 'Returns a collection of all agreements to which the user has access with pagination'
      operationId: 'AgreementController::index'
      produces:
        - application/json
      responses:
        '200':
          description: 'Paginated collection of agreements'
          schema:
            type: array
            items:
              $ref: '#/definitions/Agreement'
        default:
          description: error payload
          schema:
            type: array
            items:
              $ref: '#/definitions/ErrorResponse'
    post:
      summary: 'Add a new agreement for the system to manage'
      description: 'Agreements exist in many forms including bailment, blanket purchase agreements, contracts, basic agreements, basic ordering agreements, grants, indefiniate delivery - indefinate quantity, purchase orders, indefinate delivery - definate quantity, requirements, letter contacts, taks orders, leases and release/delivery orders; however, each of these agreements share basic elements and management aspects after they have been awarded. This endpoint provides a unified entry point to place an agreement of any type under management for the post-award system.'
      operationId: 'AgreementController::create'
      produces:
      - application/json
      schemes:
      - http
      parameters:
      - name: agreement_details
        in: body
        schema:
          $ref: '#/definitions/agreement_details'
      responses:
        201:
          description: 'The provided agreement was successfully added to the post award system.'
        400:
          description: 'The provided agreement failed basic preconditions, please refer to API documentation for required data.'
        401:
          description: 'Agreements must be provided with appropriate authorization and will not be processed from unauthorized entities.'
        409:
          description: 'The provided agreement has already been processed by post award and is on file, this appears to be a duplicate. The client should use the PATCH endpoint to update an existing agreement'
        415:
          description: 'Agreements must be provided in appropriate application/json structure for real time processing. Other microservices may handle conversion of resources for conversion to this format and should be used instead.'
        500:
          description: 'Something went wrong server side, this is likely not a problem with the input and the server has not yet implemented appropriate handling for the condition created, administrators have been notified.'
        503:
          description: 'The server is temporarily unavailable retry in provided header duration, provided in seconds.'
definitions:
  Agreement:
    type: 'object'
    properties:
      agreement_details:
        $ref: '#/definitions/agreement_details'
      party_list:
        $ref: '#/definitions/party_list'
      fund_list:
        type: 'array'
        items:
          type: 'object'
          $ref: '#/definitions/fund'
      reference_list:
        $ref: '#/definitions/reference'
      term_list:
        $ref: '#/definitions/term'
      item_list:
        $ref: '#/definitions/item'
  agreement_details:
    type: 'object'
    properties:
      order_identifier:
        type: 'string'
      release_identifier:
        type: 'string'
      effective_date:
        type: 'string'
        format: 'date-time'
      total_value:
        type: 'number'
        format: 'double'
  fund_list:
    type: 'array'
    items:
      $ref: '#/definitions/fund'
  fund:
    type: 'object'
    properties:
      funding_type:
        type: 'string'
        description: Supported funding types
        default: SloaAccountingLine
        enum:
          - SloaAccountingLine
          - AirForceLegacyAccountingLine
          - ArmyLegacyAccountingLine
          - MarineCorpsAccountingLine
          - NavyLegacyAccountingLine
      required:
        - funding_type
  party_list:
    type: 'array'
    items:
      $ref: '#/definitions/party'
  party:
    type: 'object'
  ErrorResponse:
    description: The error response object
    allOf:
    - $ref: '#/definitions/docs'
    - type: object
      properties:
        errors:
          type: 'array'
          items:
            error:
              type: 'string'
  docs:
    description: Relevant documentation that may be of use to the requestor
    type: array
    items:
      properties:
        type: string
